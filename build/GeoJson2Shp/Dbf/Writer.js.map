{"version":3,"file":"Writer.js","sources":["../../../src/GeoJson2Shp/Dbf/Writer.js"],"sourcesContent":["﻿/**\r\n * @module GeoJson2Shp/Dbf/Write\r\n */\r\n\r\nimport * as Lib from '../Lib.js'\r\nimport * as Field from './Field.js'\r\n\r\n/**\r\n * 根据属性对象与字段定义生成dbf文件流,字段定义可不传,通过属性对象进行生成\r\n * dbf文件结构\r\n *\r\n *           _______________________  _______\r\n * 00h /   0| 版本号(dBase III)     |  ^\r\n *          |-----------------------|  |\r\n * 01h /   1|  最后更新时间(年)     |  |\r\n * 02h /   2|  最后更新时间(月)     |  |\r\n * 03h /   3|  最后更新时间(日)     |  |\r\n *          |-----------------------|  |\r\n * 04h /   4| 记录数量              | Record\r\n * 05h /   5|                       | header\r\n * 06h /   6|                       |  |\r\n * 07h /   7|                       |  |\r\n *          |-----------------------|  |\r\n * 08h /   8| 文件头信息长度        |  |\r\n * 09h /   9|                       |  |\r\n *          |-----------------------|  |\r\n * 0Ah /  10| 每条记录的长度        |  |\r\n * 0Bh /  11|                       |  |\r\n *          |-----------------------|  |\r\n * 0Ch /  12| ( Reserved )        *3|  |\r\n * 0Dh /  13|                       |  |\r\n *          |-----------------------|  |\r\n * 0Eh /  14| Incomplete transac.*12|  |\r\n *          |-----------------------|  |\r\n * 0Fh /  15| Encryption flag    *13|  |\r\n *          |-----------------------|  |\r\n * 10h /  16| Free record thread    |  |\r\n * 11h /  17| (reserved for LAN     |  |\r\n * 12h /  18|  only )               |  |\r\n * 13h /  19|                       |  |\r\n *          |-----------------------|  |\r\n * 14h /  20| ( Reserved for        |  |            _        |=======================| ______\r\n *          |   multi-user dBASE )  |  |           / 00h /  0| Field name in ASCII   |  ^\r\n *          : ( dBASE III+ - )      :  |          /          : (terminated by 00h)   :  |\r\n *          :                       :  |         |           |                       |  |\r\n * 1Bh /  27|                       |  |         |   0Ah / 10|                       |  |\r\n *          |-----------------------|  |         |           |-----------------------| For\r\n * 1Ch /  28| MDX flag (dBASE IV)*14|  |         |   0Bh / 11| Field type (ASCII) *20| each\r\n *          |-----------------------|  |         |           |-----------------------| field\r\n * 1Dh /  29| Language driver     *5|  |        /    0Ch / 12| Field data address    |  |\r\n *          |-----------------------|  |       /             |                     *6|  |\r\n * 1Eh /  30| ( Reserved )          |  |      /              | (in memory !!!)       |  |\r\n * 1Fh /  31|                     *3|  |     /       0Fh / 15| (dBASE III+)          |  |\r\n *          |=======================|__|____/                |-----------------------|  |  -\r\n * 20h /  32|                       |  |  ^          10h / 16| Field length       *22|  |   |\r\n *          |- - - - - - - - - - - -|  |  |                  |-----------------------|  |   | *7\r\n *          |                    *19|  |  |          11h / 17| Decimal count      *23|  |   |\r\n *          |- - - - - - - - - - - -|  |  Field              |-----------------------|  |  -\r\n *          |                       |  | Descriptor  12h / 18| ( Reserved for        |  |\r\n *          :. . . . . . . . . . . .:  |  |array     13h / 19|   multi-user dBASE)*18|  |\r\n *          :                       :  |  |                  |-----------------------|  |\r\n *       n  |                       |__|__v_         14h / 20| Work area ID       *16|  |\r\n *          |-----------------------|  |    \\                |-----------------------|  |\r\n *       n+1| Terminator (0Dh)      |  |     \\       15h / 21| ( Reserved for        |  |\r\n *          |=======================|  |      \\      16h / 22|   multi-user dBASE )  |  |\r\n *       m  | Database Container    |  |       \\             |-----------------------|  |\r\n *          :                    *15:  |        \\    17h / 23| Flag for SET FIELDS   |  |\r\n *          :                       :  |         |           |-----------------------|  |\r\n *     / m+263                      |  |         |   18h / 24| ( Reserved )          |  |\r\n *          |=======================|__v_ ___    |           :                       :  |\r\n *          :                       :    ^       |           :                       :  |\r\n *          :                       :    |       |           :                       :  |\r\n *          :                       :    |       |   1Eh / 30|                       |  |\r\n *          | Record structure      |    |       |           |-----------------------|  |\r\n *          |                       |    |        \\  1Fh / 31| Index field flag    *8|  |\r\n *          |                       |    |         \\_        |=======================| _v_____\r\n *          |                       | Records\r\n *          |-----------------------|    |\r\n *          |                       |    |          _        |=======================| _______\r\n *          |                       |    |         / 00h /  0| Record deleted flag *9|  ^\r\n *          |                       |    |        /          |-----------------------|  |\r\n *          |                       |    |       /           | Data               *10|  One\r\n *          |                       |    |      /            : (ASCII)            *17: record\r\n *          |                       |____|_____/             |                       |  |\r\n *          :                       :    |                   |                       | _v_____\r\n *          :                       :____|_____              |=======================|\r\n *          :                       :    |\r\n *          |                       |    |\r\n *          |                       |    |\r\n *          |                       |    |\r\n *          |                       |    |\r\n *          |                       |    |\r\n *          |=======================|    |\r\n *          |__文件结束标识__________| ___v____  文件结束标识 ( 1Ah )  *11\r\n * \r\n */\r\nclass Writer {\r\n    /**\r\n     * \r\n     * @param {Array.<Object>} data 属性对象\r\n     * @param {Array.<module:GeoJson2Shp/Dbf/Field~Field>} field_meta  字段定义\r\n     */\r\n    constructor(data, field_meta) {\r\n\r\n        /**\r\n         * 字段定义\r\n         * @type  {Array.<module:GeoJson2Shp/Dbf/Field~Field>}\r\n         */\r\n        this.field_meta_ = field_meta || Field.multi(data);\r\n\r\n        /**\r\n         * 字段定义\r\n         * @type {Array.<Object>}\r\n         */\r\n        this.data_ = data;\r\n    }\r\n\r\n    /**\r\n     * 写入dbf文件\r\n     * @param {function} callback 回调函数\r\n     */\r\n    write(callback) {\r\n\r\n        /**\r\n         * 字段描述长度\r\n         * @type {number}\r\n         */\r\n        var fieldDescLength = (32 * this.field_meta_.length);\r\n\r\n        /**\r\n         * 每条记录所占长度(包括删除标记)\r\n         * @type {number}\r\n         */\r\n        var bytesPerRecord = this.getBytesPerRecord(this.field_meta_);\r\n\r\n        /**\r\n         * dbf文件流\r\n         * @type {ArrayBuffer}\r\n         */\r\n        var buffer = new ArrayBuffer(\r\n            // 文件头信息长度\r\n            32 +\r\n            // 字段描述长度\r\n            fieldDescLength +\r\n            //描述信息结束\r\n            1 +\r\n            // 属性数据长度\r\n            (bytesPerRecord * this.data_.length) +\r\n            // 文件结束标识\r\n            1\r\n        );\r\n\r\n        /**\r\n         * 当前时间\r\n         * @type {Date}\r\n         */\r\n        var now = new Date();\r\n\r\n        /**\r\n         * dbf文件视图\r\n         * @type {DataView}\r\n         */\r\n        var view = new DataView(buffer);\r\n\r\n        // 版本号 - dBase III(1)\r\n        view.setUint8(0, 0x03);\r\n        // 最后一次更新日期\r\n        //当前年-1900(1)\r\n        view.setUint8(1, now.getFullYear() - 1900);\r\n        //当前月(1)\r\n        view.setUint8(2, now.getMonth());\r\n        //当前日(1)\r\n        view.setUint8(3, now.getDate());\r\n        // 记录数(4)\r\n        view.setUint32(4, this.data_.length, true);\r\n\r\n        // 文件头信息长度(2)\r\n        var headerLength = fieldDescLength + 32 + 1;\r\n        view.setUint16(8, headerLength, true);\r\n        // 每条记录的长度\r\n        view.setUint16(10, bytesPerRecord, true);\r\n\r\n        // 描述信息结束(1)\r\n        view.setInt8(32 + fieldDescLength, 0x0D);\r\n\r\n        //字段描述(字段数量*32)\r\n        this.field_meta_.forEach(function (f, i) {\r\n            //字段名称占10位\r\n            let name = f.name.slice(0, 10);\r\n            name = Lib.rpad(name, 10, \" \");\r\n            let uint8Array = Lib.stringToUint8Array(name);\r\n\r\n            for (let index = 0; index < 10; index++) {\r\n                view.setInt8(32 + i * 32 + index, uint8Array[index]);\r\n            }\r\n\r\n            // 字段类型(5)\r\n            view.setInt8(32 + i * 32 + 11, f.type.charCodeAt(0));\r\n            // 字段长度(1)\r\n            view.setInt8(32 + i * 32 + 16, f.size);\r\n            if (f.type == 'N') view.setInt8(32 + i * 32 + 17, 3);\r\n        });\r\n\r\n        var offset = fieldDescLength + 32 + 1;\r\n\r\n        //记录\r\n        this.data_.forEach(function (row, num) {\r\n            // 删除标记\r\n            view.setUint8(offset, 32);\r\n            offset++;\r\n            this.field_meta_.forEach(function (f) {\r\n                var val = row[f.name];\r\n                if (val === null || typeof val === 'undefined') val = '';\r\n\r\n                switch (f.type) {\r\n                    // boolean\r\n                    case 'L':\r\n                        view.setUint8(offset, val ? 84 : 70);\r\n                        offset++;\r\n                        break;\r\n\r\n                    // date\r\n                    case 'D':\r\n                        offset = this.writeField_(view, 8,\r\n                            Lib.lpad(val.toString(), 8, ' '), offset);\r\n                        break;\r\n\r\n                    // number\r\n                    case 'N':\r\n                        offset = this.writeField_(view, f.size,\r\n                            Lib.lpad(val.toString(), f.size, ' ').substr(0, 18),\r\n                            offset);\r\n                        break;\r\n\r\n                    // string\r\n                    case 'C':\r\n                        offset = this.writeField_(view, f.size,\r\n                            Lib.rpad(val.toString(), f.size, ' '), offset);\r\n                        break;\r\n\r\n                    default:\r\n                        throw new Error('Unknown field type');\r\n                }\r\n            }.bind(this));\r\n        }.bind(this));\r\n\r\n        // 文件结束表示\r\n        view.setUint8(offset, 0x1A);\r\n\r\n        callback(null, {\r\n            dbf: view\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 写入字段\r\n     * @param {DataView} view dbf文件对象\r\n     * @param {number} fieldLength 字段长度\r\n     * @param {string} str 值\r\n     * @param {number} offset 写入位置\r\n     * @returns {number} 写入后流的位置\r\n     */\r\n    writeField_(view, fieldLength, str, offset) {\r\n        let uint8Array = Lib.stringToUint8Array(str);\r\n        for (var i = 0; i < fieldLength; i++) {\r\n            view.setUint8(offset, uint8Array[i]);\r\n            offset++;\r\n        }\r\n        return offset;\r\n    };\r\n\r\n    /**\r\n     * 获取每条记录所占字节数(包括删除标记)\r\n     * @param {Array.<module:GeoJson2Shp/Dbf/Field~Field>} fields 字段定义\r\n     * @returns {number} 每条记录所占长度\r\n     */\r\n    getBytesPerRecord(fields) {\r\n        // deleted flag\r\n        return fields.reduce(function (memo, f) { return memo + f.size; }, 1);\r\n    }\r\n}\r\n\r\nexport default Writer;\r\n"],"names":["let"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAK,GAAG,MAAM,WAAW;AAChC,OAAO,KAAK,KAAK,MAAM,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAM,MAAM,GAMR,eAAW,CAAC,IAAI,EAAE,UAAU,EAAE;AAClC;AACA,IAAQ;AACR,KAAS;AACT,KAAS;AACT,KAAS;AACT,IAAQ,IAAI,CAAC,WAAW,GAAG,UAAU,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC3D;AACA,IAAQ;AACR,KAAS;AACT,KAAS;AACT,KAAS;AACT,IAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB,EAAC;AACL;AACI;AACJ,CAAK;AACL,CAAK;AACL,CAAK;iBACD,uBAAK,CAAC,QAAQ,EAAE;AACpB;AACA,IAAQ;AACR,KAAS;AACT,KAAS;AACT,KAAS;AACT,IAAQ,IAAI,eAAe,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAC7D;AACA,IAAQ;AACR,KAAS;AACT,KAAS;AACT,KAAS;AACT,IAAQ,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACtE;AACA,IAAQ;AACR,KAAS;AACT,KAAS;AACT,KAAS;AACT,IAAQ,IAAI,MAAM,GAAG,IAAI,WAAW;AACpC,QAAY;AA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"}