{"version":3,"file":"GeoJson2Shp.js","sources":["../../src/GeoJson2Shp/GeoJson2Shp.js"],"sourcesContent":["﻿/**\r\n * @module GeoJson2Shp/GeoJson2Shp\r\n */\r\n\r\nimport MultiPointWriter from './Shp/MultiPointWriter.js'\r\nimport PointWriter from './Shp/PointWriter.js'\r\nimport PolyWriter from './Shp/PolyWriter.js'\r\nimport DbfWrite from './Dbf/Writer.js'\r\nimport GeometryType from './Shp/GeometryType.js'\r\n\r\n/**\r\n * GeoJson转为Shp \r\n * @api\r\n */\r\nclass GeoJson2Shp {\r\n    /**\r\n     * 构造函数\r\n     * @param {Object|string} geojson 矢量数据geojson格式\r\n     */\r\n    constructor(geojson) {\r\n\r\n        if (typeof (geojson) == \"string\") {\r\n            geojson = eval(\"(\" + geojson + \")\");\r\n        }\r\n\r\n        /**\r\n         * @type {Object|string}\r\n         * @readonly\r\n         */\r\n        this.geojson_ = geojson;\r\n    }\r\n\r\n    /**\r\n     * 写入点\r\n     * @param {Function} callback\r\n     */\r\n    writePoint(callback) {\r\n        this.write_(GeometryType.POINT, callback);\r\n    }\r\n\r\n    /**\r\n    * 写入多点\r\n    * @param {Function} callback\r\n    */\r\n    writeMultiPoint(callback) {\r\n        this.write_(GeometryType.MULTIPOINT, callback);\r\n    }\r\n\r\n    /**\r\n     * 写入线\r\n     * @param {Function} callback\r\n     */\r\n    writePolyline(callback) {\r\n        this.write_(GeometryType.POLYLINE, callback);\r\n    }\r\n\r\n    /**\r\n     * 写入面\r\n     * @param {Function} callback\r\n     */\r\n    writePolygon(callback) {\r\n        this.write_(GeometryType.POLYGON, callback);\r\n    }\r\n\r\n    /**\r\n     * 根据类型写入\r\n     * @param {module:GeoJson2Shp/Shp/GeometryType} type\r\n     * @param {Function} callback\r\n     */\r\n    write_(type, callback) {\r\n        var writeOptions = this.getWriteOptions_(type);\r\n        var writer = this.getShpWriter_(type);\r\n        if (writeOptions) {\r\n            new writer(writeOptions.geometries, writeOptions.type).write(function (err, files) {\r\n                new DbfWrite(writeOptions.properties).write(function (err, files2) {\r\n                    files.dbf = files2.dbf;\r\n                    callback(err, files);\r\n                });\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据图形类型获取shp写入器\r\n     * @param {module:GeoJson2Shp/Shp/GeometryType} type\r\n     */\r\n    getShpWriter_(type) {\r\n        var writer;\r\n        if (type == GeometryType.POINT) {\r\n            writer = PointWriter;\r\n        } else if (type == GeometryType.MULTIPOINT) {\r\n            writer = MultiPointWriter;\r\n        } else if (type == GeometryType.POLYLINE) {\r\n            writer = PolyWriter;\r\n        } else if (type == GeometryType.POLYGON) {\r\n            writer = PolyWriter;\r\n        }\r\n        return writer;\r\n    }\r\n\r\n    /**\r\n     * 获取点部分写入参数\r\n     * @return {module:GeoJson2Shp/GeoJson2Shp~WriteOptions} 写入参数\r\n     */\r\n    getPointOptions_() {\r\n        var oftype = this.geojson_.features.filter(function (f) { return f.geometry.type === \"Point\"; });\r\n        if (!oftype || oftype.length == 0) {\r\n            return null;\r\n        }\r\n        return {\r\n            geometries: oftype.map(this.justCoords_),\r\n            properties: oftype.map(this.justProps_),\r\n            type: GeometryType.POINT\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 获取点部分写入参数\r\n     * @return {module:GeoJson2Shp/GeoJson2Shp~WriteOptions} 写入参数\r\n     */\r\n    getMultiPointOptions_() {\r\n        var oftype = this.geojson_.features.filter(function (f) { return f.geometry.type === \"MultiPoint\"; });\r\n\r\n        if (!oftype || oftype.length == 0) {\r\n            return null;\r\n        }\r\n        return {\r\n            geometries: oftype.map(this.justCoords_),\r\n            properties: oftype.map(this.justProps_),\r\n            type: GeometryType.MULTIPOINT\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 获取线部分写入参数\r\n     * @return {module:GeoJson2Shp/GeoJson2Shp~WriteOptions} 写入参数\r\n     */\r\n    getPolylineOptions_() {\r\n        var oftype = this.geojson_.features.filter(function (f) { return f.geometry.type === \"LineString\" || f.geometry.type === \"MultiLineString\"; });\r\n        if (!oftype || oftype.length == 0) {\r\n            return null;\r\n        }\r\n        return {\r\n            geometries: oftype.map(this.justCoords_),\r\n            properties: oftype.map(this.justProps_),\r\n            type: GeometryType.POLYLINE\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 获取面部分写入参数\r\n     * @return {module:GeoJson2Shp/GeoJson2Shp~WriteOptions} 写入参数\r\n     */\r\n    getPolygonOptions_() {\r\n        var oftype = this.geojson_.features.filter(function (f) { return f.geometry.type === \"Polygon\" || f.geometry.type === \"MultiPolygon\"; });\r\n        if (!oftype || oftype.length == 0) {\r\n            return null;\r\n        }\r\n        return {\r\n            geometries: oftype.map(this.justCoords_),\r\n            properties: oftype.map(this.justProps_),\r\n            type: GeometryType.POLYGON\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * 根据传入类型获取写入参数\r\n     * @param {module:GeoJson2Shp/Shp/GeometryType} geometryType  图形类型\r\n     * @return {module:GeoJson2Shp/GeoJson2Shp~WriteOptions} 写入参数\r\n     */\r\n    getWriteOptions_(type) {\r\n        var writeOptions;\r\n        if (type == GeometryType.POINT) {\r\n            writeOptions = this.getPointOptions_();\r\n        } else if (type == GeometryType.MULTIPOINT) {\r\n            writeOptions = this.getMultiPointOptions_();\r\n        } else if (type == GeometryType.POLYLINE) {\r\n            writeOptions = this.getPolylineOptions_();\r\n        } else if (type == GeometryType.POLYGON) {\r\n            writeOptions = this.getPolygonOptions_();\r\n        }\r\n        return writeOptions;\r\n    }\r\n\r\n    /**\r\n     * 获取GeoJson中的坐标部分\r\n     * @param {Object} t GeoJson中的feature\r\n     * @return {Array} feature中的坐标部分\r\n     */\r\n    justCoords_(t) {\r\n        if (t.geometry.type == \"LineString\" || t.geometry.type == \"MultiLineString\") {\r\n            return [t.geometry.coordinates];\r\n        } else {\r\n            return t.geometry.coordinates\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取GeoJson中的属性部分\r\n     * @param {Object} t GeoJson中的feature\r\n     * @return {Object} feature中的属性部分\r\n     */\r\n    justProps_(t) {\r\n        return t.properties;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @typedef {Object} WriteOptions\r\n * @property {Array} geometries\r\n * @property {Array} properties\r\n * @property {Array} type\r\n */\r\n\r\nexport default GeoJson2Shp;\r\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,gBAAgB,MAAM,2BAA2B;AACxD,OAAO,WAAW,MAAM,sBAAsB;AAC9C,OAAO,UAAU,MAAM,qBAAqB;AAC5C,OAAO,QAAQ,MAAM,iBAAiB;AACtC,OAAO,YAAY,MAAM,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA,IAAM,WAAW,GAKb,oBAAW,CAAC,OAAO,EAAE;AACzB;AACA,IAAQ,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,QAAQ,EAAE;AAC1C,QAAY,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC;AAChD,IAAQ,CAAC;AACT;AACA,IAAQ;AACR,KAAS;AACT,KAAS;AACT,KAAS;AACT,IAAQ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC5B,EAAC;AACL;AACI;AACJ,CAAK;AACL,CAAK;AACL,CAAK;sBACD,iCAAU,CAAC,QAAQ,EAAE;AACzB,IAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC9C,EAAC;AACL;AACI;AACA;AACA;AACA;sBACA,2CAAe,CAAC,QAAQ,EAAE;AAC9B,IAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACnD,EAAC;AACL;AACI;AACJ,CAAK;AACL,CAAK;AACL,CAAK;sBACD,uCAAa,CAAC,QAAQ,EAAE;AAC5B,IAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACjD,EAAC;AACL;AACI;AACJ,CAAK;AACL,CAAK;AACL,CAAK;sBACD,qCAAY,CAAC,QAAQ,EAAE;AAC3B,IAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAChD,EAAC;AACL;AACI;AACJ,CAAK;AACL,CAAK;AACL,CAAK;AACL,CAAK;sBACD,yBAAM,CAAC,IAAI,EAAE,QAAQ,EAAE;AAC3B,IAAQ,IAAI,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AACvD,IAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAC9C,IAAQ,IAAI,YAAY,EAAE;AAC1B,QAAY,IAAI,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,KAAK,EAAE;AAC/F,YAAgB,IAAI,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,MAAM,EAAE;AACnF,gBAAoB,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC3C,gBAAoB,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACzC,YAAgB,CAAC,CAAC,CAAC;AACnB;AACA,QAAY,CAAC,CAAC,CAAC;AACf,IAAQ,CAAC;AACL,EAAC;AACL;AACI;AACJ,CAAK;AACL,CAAK;AACL,CAAK;sBACD,uCAAa,CAAC,IAAI,EAAE;AACxB,IAAQ,IAAI,MAAM,CAAC;AACnB,IAAQ,IAAI,IAAI,IAAI,YAAY,CAAC,KAAK,EAAE;AACxC,QAAY,MAAM,GAAG,WAAW,CAAC;AACjC,IAAQ,CAAC,MAAM,IAAI,IAAI,IAAI,YAAY,CAAC,UAAU,EAAE;AACpD,QAAY,MAAM,GAAG,gBAAgB,CAAC;AACtC,IAAQ,CAAC,MAAM,IAAI,IAAI,IAAI,YAAY,CAAC,QAAQ,EAAE;AAClD,QAAY,MAAM,GAAG,UAAU,CAAC;AAChC,IAAQ,CAAC,MAAM,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,EAAE;AACjD,QAAY,MAAM,GAAG,UAAU,CAAC;AAChC,IAAQ,CAAC;AACT,IAAQ,OAAO,MAAM,CAAC;AAClB,EAAC;AACL;AACI;AACJ,CAAK;AACL,CAAK;AACL,CAAK;sBACD,6CAAgB,GAAG;AACvB,IAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,KAAK,OAAO,CAAC,EAAE,CAAC,CAAC;AACzG,IAAQ,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;AAC3C,QAAY,OAAO,IAAI,CAAC;AACxB,IAAQ,CAAC;AACT,IAAQ,OAAO;AACf,QAAY,UAAU,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;AACpD,QAAY,UAAU,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;AACnD,QAAY,IAAI,EAAE,YAAY,CAAC,KAAK;AACpC,IAAQ,CAAC,CAAC;AACN,EAAC;AACL;AACI;AACJ,CAAK;AACL,CAAK;AACL,CAAK;sBACD,uDAAqB,GAAG;AAC5B,IAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,KAAK,YAAY,CAAC,EAAE,CAAC,CAAC;AAC9G;AACA,IAAQ,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;AAC3C,QAAY,OAAO,IAAI,CAAC;AACxB,IAAQ,CAAC;AACT,IAAQ,OAAO;AACf,QAAY,UAAU,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;AACpD,QAAY,UAAU,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;AACnD,QAAY,IAAI,EAAE,YAAY,CAAC,UAAU;AACzC,IAAQ,CAAC,CAAC;AACN,EAAC;AACL;AACI;AACJ,CAAK;AACL,CAAK;AACL,CAAK;sBACD,mDAAmB,GAAG;AAC1B,IAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,KAAK,YAAY,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,KAAK,iBAAiB,CAAC,EAAE,CAAC,CAAC;AACvJ,IAAQ,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;AAC3C,QAAY,OAAO,IAAI,CAAC;AACxB,IAAQ,CAAC;AACT,IAAQ,OAAO;AACf,QAAY,UAAU,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;AACpD,QAAY,UAAU,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;AACnD,QAAY,IAAI,EAAE,YAAY,CAAC,QAAQ;AACvC,IAAQ,CAAC,CAAC;AACN,EAAC;AACL;AACI;AACJ,CAAK;AACL,CAAK;AACL,CAAK;sBACD,iDAAkB,GAAG;AACzB,IAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,KAAK,SAAS,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,KAAK,cAAc,CAAC,EAAE,CAAC,CAAC;AACjJ,IAAQ,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;AAC3C,QAAY,OAAO,IAAI,CAAC;AACxB,IAAQ,CAAC;AACT,IAAQ,OAAO;AACf,QAAY,UAAU,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;AACpD,QAAY,UAAU,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;AACnD,QAAY,IAAI,EAAE,YAAY,CAAC,OAAO;AACtC,IAAQ,CAAC,CAAC;AACN,EAAC;AACL;AACA;AACI;AACJ,CAAK;AACL,CAAK;AACL,CAAK;AACL,CAAK;sBACD,6CAAgB,CAAC,IAAI,EAAE;AAC3B,IAAQ,IAAI,YAAY,CAAC;AACzB,IAAQ,IAAI,IAAI,IAAI,YAAY,CAAC,KAAK,EAAE;AACxC,QAAY,YAAY,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACnD,IAAQ,CAAC,MAAM,IAAI,IAAI,IAAI,YAAY,CAAC,UAAU,EAAE;AACpD,QAAY,YAAY,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;AACxD,IAAQ,CAAC,MAAM,IAAI,IAAI,IAAI,YAAY,CAAC,QAAQ,EAAE;AAClD,QAAY,YAAY,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACtD,IAAQ,CAAC,MAAM,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,EAAE;AACjD,QAAY,YAAY,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;AACrD,IAAQ,CAAC;AACT,IAAQ,OAAO,YAAY,CAAC;AACxB,EAAC;AACL;AACI;AACJ,CAAK;AACL,CAAK;AACL,CAAK;AACL,CAAK;sBACD,mCAAW,CAAC,CAAC,EAAE;AACnB,IAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,YAAY,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,iBAAiB,EAAE;AACrF,QAAY,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AAC5C,IAAQ,CAAC,MAAM;AACf,QAAY,OAAO,CAAC,CAAC,QAAQ,CAAC,WAAW;AACzC,IAAQ,CAAC;AACL,EAAC;AACL;AACI;AACJ,CAAK;AACL,CAAK;AACL,CAAK;AACL,CAAK;sBACD,iCAAU,CAAC,CAAC,EAAE;AAClB,IAAQ,OAAO,CAAC,CAAC,UAAU,CAAC;AACxB,EAEH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW,CAAC;"}